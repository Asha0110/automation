<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" ignored="0" total="22" passed="17">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="17727" started-at="2021-08-24T11:06:08 EDT" finished-at="2021-08-24T11:06:26 EDT">
    <groups>
    </groups>
    <test name="Test" duration-ms="17727" started-at="2021-08-24T11:06:08 EDT" finished-at="2021-08-24T11:06:26 EDT">
      <class name="com.employeeapi.testcases.TC005_Delete_Employee_Record">
        <test-method status="PASS" signature="deleteEmployee()[pri:0, instance:com.employeeapi.testcases.TC005_Delete_Employee_Record@1db50c5]" name="deleteEmployee" is-config="true" duration-ms="5439" started-at="2021-08-24T11:06:13 EDT" finished-at="2021-08-24T11:06:18 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteEmployee -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employeeapi.testcases.TC005_Delete_Employee_Record@1db50c5]" name="setUp" is-config="true" duration-ms="0" started-at="2021-08-24T11:06:13 EDT" finished-at="2021-08-24T11:06:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testcases.TC005_Delete_Employee_Record@1db50c5]" name="checkContentType" duration-ms="6" started-at="2021-08-24T11:06:18 EDT" finished-at="2021-08-24T11:06:18 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC005_Delete_Employee_Record@1db50c5]" name="checkStatusCode" duration-ms="2" started-at="2021-08-24T11:06:18 EDT" finished-at="2021-08-24T11:06:18 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testcases.TC005_Delete_Employee_Record@1db50c5]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-08-24T11:06:18 EDT" finished-at="2021-08-24T11:06:18 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testcases.TC005_Delete_Employee_Record -->
      <class name="com.employeeapi.testcases.TC004_Put_Employee_Record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@dba097]" name="setUp" is-config="true" duration-ms="107" started-at="2021-08-24T11:06:08 EDT" finished-at="2021-08-24T11:06:08 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="updateEmployess()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@dba097]" name="updateEmployess" is-config="true" duration-ms="3060" started-at="2021-08-24T11:06:08 EDT" finished-at="2021-08-24T11:06:11 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmployess -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@dba097]" name="checkContentType" duration-ms="324" started-at="2021-08-24T11:06:11 EDT" finished-at="2021-08-24T11:06:12 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@dba097]" name="checkStatusCode" duration-ms="6" started-at="2021-08-24T11:06:12 EDT" finished-at="2021-08-24T11:06:12 EDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [405]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [405]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at com.employeeapi.testcases.TC004_Put_Employee_Record.checkStatusCode(TC004_Put_Employee_Record.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at org.testng.TestRunner$$Lambda$100/18337099.accept(Unknown Source)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkresponseBody()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@dba097]" name="checkresponseBody" duration-ms="19" started-at="2021-08-24T11:06:12 EDT" finished-at="2021-08-24T11:06:12 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkresponseBody -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@dba097]" name="tearDown" is-config="true" duration-ms="2" started-at="2021-08-24T11:06:12 EDT" finished-at="2021-08-24T11:06:12 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testcases.TC004_Put_Employee_Record -->
      <class name="com.employeeapi.testcases.TC002_Get_Single_Employee_Record">
        <test-method status="PASS" signature="getEmployeeData()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@72e3f]" name="getEmployeeData" is-config="true" duration-ms="3889" started-at="2021-08-24T11:06:18 EDT" finished-at="2021-08-24T11:06:22 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmployeeData -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@72e3f]" name="setUp" is-config="true" duration-ms="0" started-at="2021-08-24T11:06:18 EDT" finished-at="2021-08-24T11:06:18 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="checkContentType()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@72e3f]" name="checkContentType" duration-ms="2" started-at="2021-08-24T11:06:22 EDT" finished-at="2021-08-24T11:06:22 EDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [application/json] but found [text/html; charset=UTF-8]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [application/json] but found [text/html; charset=UTF-8]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.employeeapi.testcases.TC002_Get_Single_Employee_Record.checkContentType(TC002_Get_Single_Employee_Record.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at org.testng.TestRunner$$Lambda$100/18337099.accept(Unknown Source)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@72e3f]" name="checkResponseBody" duration-ms="3" started-at="2021-08-24T11:06:22 EDT" finished-at="2021-08-24T11:06:22 EDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at com.employeeapi.testcases.TC002_Get_Single_Employee_Record.checkResponseBody(TC002_Get_Single_Employee_Record.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at org.testng.TestRunner$$Lambda$100/18337099.accept(Unknown Source)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@72e3f]" name="checkResponseTime" duration-ms="1" started-at="2021-08-24T11:06:22 EDT" finished-at="2021-08-24T11:06:22 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="FAIL" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@72e3f]" name="checkStatusCode" duration-ms="2" started-at="2021-08-24T11:06:22 EDT" finished-at="2021-08-24T11:06:22 EDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [429]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [429]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at com.employeeapi.testcases.TC002_Get_Single_Employee_Record.checkStatusCode(TC002_Get_Single_Employee_Record.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at org.testng.TestRunner$$Lambda$100/18337099.accept(Unknown Source)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="FAIL" signature="checkcontentEncoding()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@72e3f]" name="checkcontentEncoding" duration-ms="4" started-at="2021-08-24T11:06:22 EDT" finished-at="2021-08-24T11:06:22 EDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [gzip] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [gzip] but found [null]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.employeeapi.testcases.TC002_Get_Single_Employee_Record.checkcontentEncoding(TC002_Get_Single_Employee_Record.java:65)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at org.testng.TestRunner$$Lambda$100/18337099.accept(Unknown Source)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkcontentEncoding -->
        <test-method status="PASS" signature="checkserverType()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@72e3f]" name="checkserverType" duration-ms="2" started-at="2021-08-24T11:06:22 EDT" finished-at="2021-08-24T11:06:22 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkserverType -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@72e3f]" name="tearDown" is-config="true" duration-ms="1" started-at="2021-08-24T11:06:22 EDT" finished-at="2021-08-24T11:06:22 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testcases.TC002_Get_Single_Employee_Record -->
      <class name="com.employeeapi.testcases.TC003_Post_Employee_Record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@ceb130]" name="setUp" is-config="true" duration-ms="0" started-at="2021-08-24T11:06:12 EDT" finished-at="2021-08-24T11:06:12 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@ceb130]" name="createEmployee" is-config="true" duration-ms="847" started-at="2021-08-24T11:06:12 EDT" finished-at="2021-08-24T11:06:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@ceb130]" name="checkContentType" duration-ms="1" started-at="2021-08-24T11:06:13 EDT" finished-at="2021-08-24T11:06:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@ceb130]" name="checkStatusCode" duration-ms="3" started-at="2021-08-24T11:06:13 EDT" finished-at="2021-08-24T11:06:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkresponseBody()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@ceb130]" name="checkresponseBody" duration-ms="6" started-at="2021-08-24T11:06:13 EDT" finished-at="2021-08-24T11:06:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkresponseBody -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@ceb130]" name="tearDown" is-config="true" duration-ms="2" started-at="2021-08-24T11:06:13 EDT" finished-at="2021-08-24T11:06:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testcases.TC003_Post_Employee_Record -->
      <class name="com.employeeapi.testcases.TC001_Get_All_Employees">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@11b0d2a]" name="setUp" is-config="true" duration-ms="1" started-at="2021-08-24T11:06:22 EDT" finished-at="2021-08-24T11:06:22 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@11b0d2a]" name="getAllEmployees" is-config="true" duration-ms="3854" started-at="2021-08-24T11:06:22 EDT" finished-at="2021-08-24T11:06:26 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@11b0d2a]" name="checkContentType" duration-ms="1" started-at="2021-08-24T11:06:26 EDT" finished-at="2021-08-24T11:06:26 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkCookies()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@11b0d2a]" name="checkCookies" duration-ms="2" started-at="2021-08-24T11:06:26 EDT" finished-at="2021-08-24T11:06:26 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCookies -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@11b0d2a]" name="checkStatusCode" duration-ms="2" started-at="2021-08-24T11:06:26 EDT" finished-at="2021-08-24T11:06:26 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@11b0d2a]" name="checkStatusLine" duration-ms="3" started-at="2021-08-24T11:06:26 EDT" finished-at="2021-08-24T11:06:26 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="checkcontentEncoding()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@11b0d2a]" name="checkcontentEncoding" duration-ms="3" started-at="2021-08-24T11:06:26 EDT" finished-at="2021-08-24T11:06:26 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkcontentEncoding -->
        <test-method status="PASS" signature="checkcontentLength()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@11b0d2a]" name="checkcontentLength" duration-ms="2" started-at="2021-08-24T11:06:26 EDT" finished-at="2021-08-24T11:06:26 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkcontentLength -->
        <test-method status="PASS" signature="checkresponseBody()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@11b0d2a]" name="checkresponseBody" duration-ms="5" started-at="2021-08-24T11:06:26 EDT" finished-at="2021-08-24T11:06:26 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkresponseBody -->
        <test-method status="PASS" signature="checkserverType()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@11b0d2a]" name="checkserverType" duration-ms="4" started-at="2021-08-24T11:06:26 EDT" finished-at="2021-08-24T11:06:26 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkserverType -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@11b0d2a]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-08-24T11:06:26 EDT" finished-at="2021-08-24T11:06:26 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testcases.TC001_Get_All_Employees -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
